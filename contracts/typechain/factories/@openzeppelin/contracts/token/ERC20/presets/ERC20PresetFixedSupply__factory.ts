/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC20PresetFixedSupply,
  ERC20PresetFixedSupplyInterface,
} from "../../../../../../@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080815234620003e357620013ae803803806200001e81620003e8565b9283398101608082820312620003e35781516001600160401b039290838111620003e35782620000509183016200040e565b926020928383015190828211620003e3576200006e9184016200040e565b906060868401519301519460018060a01b038616809603620003e357805191808311620002e35760038054936001938486811c96168015620003d8575b89871014620003c2578190601f968781116200036c575b5089908783116001146200030557600092620002f9575b505060001982841b1c191690841b1781555b8451918211620002e35760049485548481811c91168015620002d8575b89821014620002c35785811162000278575b5087908584116001146200020d5793839491849260009562000201575b50501b92600019911b1c19161782555b8415620001bf575060025490828201809211620001aa575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610f2d9081620004818239f35b601190634e487b7160e01b6000525260246000fd5b855162461bcd60e51b815291820184905260248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260649150fd5b01519350388062000137565b9190601f1984169287600052848a6000209460005b8c8983831062000260575050501062000245575b50505050811b01825562000147565b01519060f884600019921b161c191690553880808062000236565b86860151895590970196948501948893500162000222565b86600052886000208680860160051c8201928b8710620002b9575b0160051c019085905b828110620002ac5750506200011a565b600081550185906200029c565b9250819262000293565b602287634e487b7160e01b6000525260246000fd5b90607f169062000108565b634e487b7160e01b600052604160045260246000fd5b015190503880620000d9565b90869350601f19831691856000528b6000209260005b8d8282106200035557505084116200033c575b505050811b018155620000eb565b015160001983861b60f8161c191690553880806200032e565b8385015186558a979095019493840193016200031b565b90915083600052896000208780850160051c8201928c8610620003b8575b918891869594930160051c01915b828110620003a8575050620000c2565b6000815585945088910162000398565b925081926200038a565b634e487b7160e01b600052602260045260246000fd5b95607f1695620000ab565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002e357604052565b919080601f84011215620003e35782516001600160401b038111620002e35760209062000444601f8201601f19168301620003e8565b92818452828287010111620003e35760005b8181106200046c57508260009394955001015290565b85810183015184820184015282016200045656fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461072657508163095ea7b3146106de57816318160ddd146106a157816323b872dd14610646578163313ce5671461060c578163395093511461056257816342966c681461052657816370a08231146104c557816379cc67901461047457816395d89b411461027e578163a457c2d71461017857508063a9059cbb1461012a5763dd62ed3e146100b457600080fd5b3461012657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012657806020926100ee6108ce565b6100f66108f6565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b5080fd5b503461012657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610126576020906101716101676108ce565b6024359033610919565b5160018152f35b9050823461027b57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027b576101b16108ce565b918360243592338152600160205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106101f8576020856101718585038733610b28565b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b83833461012657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012657805190828454600181811c9080831692831561046a575b602093848410811461043e5783885287959493929181156103e35750600114610367575b50505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff84118385101761033b5750829182610337925282610868565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103cd57505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936102e9565b8054888501870152879450928501928101610392565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b830101905081601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06102e9565b60248960228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b91607f16916102c5565b505034610126577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027b576104c26104ae6108ce565b602435906104bd823383610c9d565b610d7a565b80f35b5050346101265760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610126578060209273ffffffffffffffffffffffffffffffffffffffff6105176108ce565b16815280845220549051908152f35b8390346101265760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610126576104c2903533610d7a565b82843461027b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027b5761059a6108ce565b338252600160205282822073ffffffffffffffffffffffffffffffffffffffff82168352602052828220549160243583018093116105e057602084610171858533610b28565b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b50503461012657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610126576020905160128152f35b5050346101265760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610126576020906101716106856108ce565b61068d6108f6565b6044359161069c833383610c9d565b610919565b50503461012657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610126576020906002549051908152f35b50503461012657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101265760209061017161071c6108ce565b6024359033610b28565b8490843461086457827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108645782600354600181811c9080831692831561085a575b602093848410811461043e5783885287959493929181156103e357506001146107dd5750505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff84118385101761033b5750829182610337925282610868565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061084457505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936102e9565b8054888501870152879450928501928101610809565b91607f169161076c565b8280fd5b60208082528251818301819052939260005b8581106108ba575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b81810183015184820160400152820161087a565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036108f157565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036108f157565b73ffffffffffffffffffffffffffffffffffffffff809116918215610aa45716918215610a205760008281528060205260408120549180831061099c57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff809116918215610c1a5716918215610b965760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b9073ffffffffffffffffffffffffffffffffffffffff80831660005260016020526040600020908216600052602052604060002054927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8403610d01575b50505050565b808410610d1c57610d13930391610b28565b38808080610cfb565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff168015610e7357600091818352826020526040832054818110610def57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fdfea2646970667358221220d9577eefbe0c5137c0034537f468d0a6efbb6c16614fb14ef926f42ab4871fdc64736f6c63430008130033";

type ERC20PresetFixedSupplyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20PresetFixedSupplyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20PresetFixedSupply__factory extends ContractFactory {
  constructor(...args: ERC20PresetFixedSupplyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20PresetFixedSupply> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      owner,
      overrides || {}
    ) as Promise<ERC20PresetFixedSupply>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      owner,
      overrides || {}
    );
  }
  override attach(address: string): ERC20PresetFixedSupply {
    return super.attach(address) as ERC20PresetFixedSupply;
  }
  override connect(signer: Signer): ERC20PresetFixedSupply__factory {
    return super.connect(signer) as ERC20PresetFixedSupply__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PresetFixedSupplyInterface {
    return new utils.Interface(_abi) as ERC20PresetFixedSupplyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20PresetFixedSupply {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20PresetFixedSupply;
  }
}
