/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DexWallet, DexWalletInterface } from "../../contracts/DexWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OrderUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "ETH_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_ORDER_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "settleToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct NFTUnitOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "availableNFTs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "cancelSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "quoteToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct ExchangeOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "hashExchangeOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "settleToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "settleAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct NFTBundleOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "hashNFTBundleOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "settleToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct NFTUnitOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "hashNFTUnitOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "makerTokenIn",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmountIn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerTokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct SwapOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "hashSwapOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aaOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "makerTokenIn",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmountIn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerTokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct SwapOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "makerSignature",
        type: "bytes",
      },
    ],
    name: "isValidSwap",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "settleToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "settleAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct NFTBundleOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "makerSignature",
        type: "bytes",
      },
    ],
    name: "makeNFTBundleExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "settleToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct NFTUnitOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "exchangeIds",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "makerSignature",
        type: "bytes",
      },
    ],
    name: "makeNFTUnitExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "makerTokenIn",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmountIn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerTokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct SwapOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "makerSignature",
        type: "bytes",
      },
    ],
    name: "makeTokenSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "quoteToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct ExchangeOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "makeTokensExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "quoteToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct ExchangeOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "maxTokensExchange",
    outputs: [
      {
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nftVerifiers",
    outputs: [
      {
        internalType: "enum ExchangeType",
        name: "exchangeType",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "settleAmtBal",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "orderUsed",
    outputs: [
      {
        internalType: "bool",
        name: "used",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "settleToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct NFTUnitOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "exchangeIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "makerSignature",
        type: "bytes",
      },
    ],
    name: "takeNFTUnitExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "makerTokenIn",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmountIn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerTokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makerAmountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct SwapOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "makerSignature",
        type: "bytes",
      },
    ],
    name: "takeTokenSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ExchangeType",
            name: "exchangeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "quoteToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct ExchangeOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "makerSignature",
        type: "bytes",
      },
    ],
    name: "takeTokensExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokensVerifiers",
    outputs: [
      {
        internalType: "uint128",
        name: "takerAmountOut",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "takerBalanceIn",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usedOrderIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "verifyNFTs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "verifyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0346200016157601f6200540538819003918201601f19168301916001600160401b0383118484101762000166578084926020946040528339810103126200016157516001600160a01b038116810362000161573060805260a05260005460ff8160081c166200010c5760ff80821610620000d0575b60405161528890816200017d82396080518181816107a7015281816116e301526118bf015260a051818181610c31015281816110560152818161142c01528181612403015281816127e1015281816150e501526151430152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000076565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80631767fd0c1461026657806317b5ff9e1461025c57806318dfb3c7146102615780632c9c08671461025c57806334ea4f9a146102575780633659cfe614610252578063373753281461024d5780633a871cdd146102485780633e285fb3146102435780634537cc8f1461023e5780634a58db19146102395780634bf5afda146102345780634d44560d1461022f5780634f1ef2861461022a57806352d1902d1461022557806354d6a2b71461022057806358bc83371461021b57806360d1aa9f1461021657806361eed7da146102115780636a513eb71461020c57806373490bac146102075780637f4ce8eb14610202578063808253da146101fd5780638da5cb5b146101f85780639f03cc2b146101f3578063a8fcc417146101ee578063af0a6426146101e9578063affed0e0146101e4578063b0d691fe146101df578063b194417c146101da578063b39c623d146101d5578063b41f44ee146101d0578063b61d27f6146101cb578063c399ec88146101c6578063c4d66de8146101c1578063d2df07ab146101bc5763d3f2175c0361000e57612a17565b6129cc565b61283a565b612769565b6126d9565b612528565b612475565b612427565b6123b8565b61236e565b61215f565b612106565b611d39565b611cfa565b611ca1565b611c5f565b611c1d565b611bb6565b611a69565b611a23565b6119d6565b611994565b611879565b611662565b6113ce565b6110d2565b611014565b610fa3565b610db1565b610bc7565b61095e565b610753565b6106ec565b6104e9565b61053a565b610326565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60e091011261029a57600490565b600080fd5b9181601f8401121561029a5782359167ffffffffffffffff831161029a576020838186019501011161029a57565b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201610100811261029a5760e01361029a5760049160e4359067ffffffffffffffff821161029a5761032291840161029f565b9091565b3461029a576103986103a061037f73ffffffffffffffffffffffffffffffffffffffff610352366102cd565b61037961036760019894989693965460601c90565b9561037189614cab565b92369161162b565b906136fb565b73ffffffffffffffffffffffffffffffffffffffff1690565b911614613567565b6103af60a082013542106135cc565b6103be4660c083013514613631565b60808101356103cc81614733565b6103e86103db6040840161336b565b60608401359033906148ea565b6103f96103f48361336b565b614b70565b91333b1561029a576040517f61eed7da000000000000000000000000000000000000000000000000000000008152600481019290925260008260248183335af18015610489576100199361046b9361046592610470575b50602061045c8461336b565b93013590613375565b90614c07565b613696565b8061047d610483926114d4565b80610682565b38610450565b612ec2565b908161010091031261029a5790565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261029a576004359067ffffffffffffffff821161029a576104e69160040161048e565b90565b3461029a5760206105016104fc3661049d565b614e42565b604051908152f35b9181601f8401121561029a5782359167ffffffffffffffff831161029a576020808501948460051b01011161029a57565b3461029a5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5767ffffffffffffffff60043581811161029a5761058a903690600401610509565b909160243590811161029a576105a4903690600401610509565b6105ac61512c565b8083036106245760005b8381106105bf57005b6105f06105d56105d0838789613f9f565b61336b565b6105ea6105e3848688615077565b369161162b565b90615232565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461061f576001016105b6565b61068d565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b600091031261029a57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b90670de0b6b3a76400009182810292818404149015171561061f57565b8181029291811591840414171561061f57565b3461029a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a576020604051620fffff8152f35b73ffffffffffffffffffffffffffffffffffffffff81160361029a57565b359061075182610728565b565b3461029a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5760043561078e81610728565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016916107d483301415612d9d565b6108037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc938285541614612e28565b61080b614ffa565b6040519061081882611525565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156108525750506100199150612f59565b6020600491604094939451928380927f52d1902d00000000000000000000000000000000000000000000000000000000825286165afa6000918161092e575b5061091b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b610019936109299114612ece565b613045565b61095091925060203d8111610957575b6109488183611596565b810190612eb3565b9038610891565b503d61093e565b3461029a576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a576109973661026b565b60e435906109a482610728565b6101043567ffffffffffffffff811161029a576109c590369060040161029f565b90926109cf614ffa565b6109dd608084013582614f37565b9060408401916109ff6109ef8461336b565b6109f88761336b565b9084614800565b610a0c60208701356134c6565b9173ffffffffffffffffffffffffffffffffffffffff9473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee86610a428361336b565b161490600091600014610b20575050610ab890610aa7610abd94610a8e610a68476134c6565b915b610a726115d7565b9687526fffffffffffffffffffffffffffffffff166020870152565b6fffffffffffffffffffffffffffffffff166040850152565b600052611002602052604060002090565b613399565b16803b1561029a57610b039360008094604051968795869485937f1767fd0c00000000000000000000000000000000000000000000000000000000855260048501613446565b03925af1801561048957610b1357005b8061047d610019926114d4565b61037f61037f610b329294939461336b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290602090829060249082905afa94851561048957610a8e610b9e610b99610abd988d610aa796610ab89992610ba4575b506060013590613375565b6134c6565b91610a6a565b6060919250610bc09060203d8111610957576109488183611596565b9190610b8e565b3461029a577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60608136011261029a5760043567ffffffffffffffff811161029a576101608160040192823603011261029a5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303610d5357610c71610c66602435846151df565b926044830190614f6f565b905015610c9c575b610c9882610c88604435614fc0565b6040519081529081906020820190565b0390f35b600154906bffffffffffffffffffffffff908183169282841461061f577fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006024936001860116911617600155013503610cf55738610c79565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6163636f756e743a20696e76616c6964206e6f6e6365000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b3461029a576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a57610dea3661026b565b60e4359061010435610dfb81610728565b610124359267ffffffffffffffff841161029a57610e3273ffffffffffffffffffffffffffffffffffffffff94369060040161029f565b949092610e3d614ffa565b610e5c610e4e6060870135856106d9565b670de0b6b3a7640000900490565b8386610e6c608082013585614f37565b9284610e7783613aba565b610e8081610f87565b610f1d5782610a8e610a68610b99610ed79895610ed26103f4610ecc610ec6610aa7996040610ab89d0199610ec06020610eb98d61336b565b920161336b565b91614800565b9b6134c6565b9661336b565b613375565b1690813b1561029a5760008094610b03604051978896879586947fb41f44ee00000000000000000000000000000000000000000000000000000000865260048601613ac4565b82610a8e610a68610b99610f53989597610ed26103f4610ecc610ec6610aa7996020610ab89d0199610ec06040610eb98d61336b565b610ed7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60021115610f9157565b610f58565b906002821015610f915752565b3461029a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a57600435600052611003602052604060038160002001546fffffffffffffffffffffffffffffffff8251916110098360ff8316610f96565b60081c166020820152f35b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126110cf5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681813b156110cf57602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af18015610489576110c3575080f35b6110cc906114d4565b80f35b80fd5b3461029a576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a57600490611110823533614f37565b9061114b61114661113461112f85600052611003602052604060002090565b61415d565b93600052611003602052604060002090565b61420e565b61119682519081519073ffffffffffffffffffffffffffffffffffffffff73ffffffffffffffff00000000000000000000000060208285169501519182169360a01c9160401c161790565b9093916111bb73ffffffffffffffffffffffffffffffffffffffff80921633146139ad565b604091828401516111cb81610f87565b6111d481610f87565b6112e257169073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8203611246575050610019935061123c4761123561122060608501516fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1690565b111561432a565b0151903390614aad565b517f70a082310000000000000000000000000000000000000000000000000000000081523095810195865294839186918290819060200103915afa93841561048957610019946112c0916000916112c5575b506112b961122060608501516fffffffffffffffffffffffffffffffff1690565b11156142c5565b61123c565b6112dc9150843d8611610957576109488183611596565b38611298565b949184849794019283515194600094855b87811061132e5750505050505050505061132661122060606100199401516fffffffffffffffffffffffffffffffff1690565b9033906148ea565b808961133e61137593855161424c565b518751809481927f6352211e0000000000000000000000000000000000000000000000000000000083528883019190602083019252565b03818a89165afa9182156104895760019261139b918a916113a1575b5088163014614260565b016112f3565b6113c191508c8d3d106113c7575b6113b98183611596565b810190614019565b38611391565b503d6113af565b3461029a57600060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126110cf5760043561140b81610728565b611413614ffa565b8173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001692833b156114a1576044908360405195869485937f205c287800000000000000000000000000000000000000000000000000000000855216600484015260243560248401525af18015610489576110c3575080f35b8280fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116114e857604052565b6114a5565b6060810190811067ffffffffffffffff8211176114e857604052565b6080810190811067ffffffffffffffff8211176114e857604052565b6020810190811067ffffffffffffffff8211176114e857604052565b6040810190811067ffffffffffffffff8211176114e857604052565b610100810190811067ffffffffffffffff8211176114e857604052565b60e0810190811067ffffffffffffffff8211176114e857604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176114e857604052565b60405190610751826114ed565b6040519061075182611509565b67ffffffffffffffff81116114e857601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192611637826115f1565b916116456040519384611596565b82948184528183011161029a578281602093846000960137010152565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5760043561169881610728565b60243567ffffffffffffffff811161029a573660238201121561029a576116c990369060248160040135910161162b565b9073ffffffffffffffffffffffffffffffffffffffff91827f0000000000000000000000000000000000000000000000000000000000000000169261171084301415612d9d565b61173f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc948286541614612e28565b611747614ffa565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561177d5750506100199150612f59565b6020600491604094939451928380927f52d1902d00000000000000000000000000000000000000000000000000000000825286165afa60009181611859575b50611846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b610019936118549114612ece565b613124565b61187291925060203d8111610957576109488183611596565b90386117bc565b3461029a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003611910576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b3461029a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a576119cb614ffa565b610019600435614733565b3461029a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a57602060405173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152f35b3461029a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a576020611a5f6004356147d0565b6040519015158152f35b3461029a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a57610019610465611220611bb0611220611ab360043533614f37565b80600052611002602052611b95611bab6040600020611b6f600260405192611ada846114ed565b611ae381613966565b8452015491611b28611b2360208301976fffffffffffffffffffffffffffffffff86168952604084019560801c8652600052611002602052604060002090565b613999565b519081519073ffffffffffffffffffffffffffffffffffffffff73ffffffffffffffff00000000000000000000000060208285169501519182169360a01c9160401c161790565b9991989092611b9573ffffffffffffffffffffffffffffffffffffffff8b1633146139ad565b516fffffffffffffffffffffffffffffffff1690565b613a12565b916148ea565b3461029a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a57600435600052611002602052604060028160002001548151906fffffffffffffffffffffffffffffffff8116825260801c6020820152f35b3461029a5760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a576020610501611c5a3661026b565b614d99565b3461029a5760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a576020610501611c9c3661026b565b614cab565b3461029a57611cb7611cb23661049d565b614414565b604051809160208083018184528251809152816040850193019160005b828110611ce357505050500390f35b835185528695509381019392810192600101611cd4565b3461029a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a57602060015460601c604051908152f35b3461029a5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a57600467ffffffffffffffff813581811161029a57611d89903690840161048e565b60243582811161029a57611da09036908501610509565b909260443590811161029a57611db9903690860161029f565b94611dfc611dde61037f600198610379611dd48b5460601c90565b966103718a614e42565b73ffffffffffffffffffffffffffffffffffffffff80941614613567565b611e0b60c085013542106135cc565b611e1a4660e086013514613631565b60a0840135611e288161479e565b6000611e3386613aba565b611e3c81610f87565b61201857604086018860005b888a89808410611fdd575050611e769350611e689250606091500161336b565b6113266080890135886106d9565b333b1561029a57611ebb60006040938451809381927f4bf5afda0000000000000000000000000000000000000000000000000000000083528883019190602083019252565b038183335af1801561048957611fca575b50611ed686613aba565b611edf81610f87565b611f98575090946020948501919060005b858110611ef957005b611f529087611f0d61037f61037f8861336b565b611f18838a87613f9f565b35908b87518096819482937f6352211e00000000000000000000000000000000000000000000000000000000845283019190602083019252565b03915afa918215610489578a92611f7591600091611f7b575b508716301461402e565b01611ef0565b611f9291508a3d8c116113c7576113b98183611596565b38611f6b565b92505050610019945061046b9350611fc4610465926080611fbb6060870161336b565b950135906106d9565b90613375565b8061047d611fd7926114d4565b38611ecc565b61200661200b92611ffd86611ff58a61201098613f4b565b959093613f9f565b35923691613c19565b61438f565b613fb4565b018990611e48565b6040908682019060208801815b8881106120455750505050506120406103f46060870161336b565b611e76565b61206461200b8a6120068d9c9b9f9e611ffd819f611ff58b8992613f4b565b61207361037f61037f8461336b565b61207e828a8d613f9f565b3590803b156121025786517f23b872dd00000000000000000000000000000000000000000000000000000000815230818b01908152336020820152604081019390935292918591849182908490829060600103925af1918215610489578c926120ef575b50019a969798999a612025565b8061047d6120fc926114d4565b386120e2565b8480fd5b3461029a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5760206040517fa8fcc417000000000000000000000000000000000000000000000000000000008152f35b3461029a5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5767ffffffffffffffff60043581811161029a576121af90369060040161048e565b60243582811161029a576121c7903690600401610509565b9092604435936121d685610728565b60643591821161029a5761220373ffffffffffffffffffffffffffffffffffffffff92369060040161029f565b92909561220e614ffa565b61221c60a087013582614f37565b8561222688613aba565b61222f81610f87565b612325576122d96122de926122c88a6122af61228a610b996122536020850161336b565b93611fc46122698c6060840197610ec08961336b565b9960806122816103f461227b86613aba565b9961336b565b930135906106d9565b916122936115e4565b9687526122a1368e8d613c19565b602088015260408701613c67565b6fffffffffffffffffffffffffffffffff166060850152565b600052611003602052604060002090565b613caa565b1691823b1561029a57600094610b038692604051988997889687957f9f03cc2b00000000000000000000000000000000000000000000000000000000875260048701613e5f565b50612369906122d961234f61233c60208b0161336b565b61234860608c0161336b565b9086614800565b916122c88a6122af61228a610b998d6080611fbb86613aba565b6122de565b3461029a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5760206bffffffffffffffffffffffff60015416604051908152f35b3461029a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461029a5760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5760406124696124643661026b565b613b5c565b82519182526020820152f35b3461029a57610c986124a161037f61248c366102cd565b60015492949293916103799061037187614cab565b9060601c14908161251a575b8161250c575b816124f0575b816124d2575b5060405190151581529081906020820190565b905060606124e56103f46040840161336b565b9101351115386124bf565b905061250661250260808301356147d0565b1590565b906124b9565b60c0810135461491506124b3565b60a0810135421091506124ad565b3461029a576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a576125613661026b565b60e4356101043567ffffffffffffffff811161029a5761037f73ffffffffffffffffffffffffffffffffffffffff6103986125a36125bf94369060040161029f565b6103796125b560019693965460601c90565b956103718a614d99565b6125ce60a083013542106135cc565b6125dd4660c084013514613631565b6080820135906125ec8261479e565b600092612600610e4e6060830135846106d9565b61260982613aba565b61261281610f87565b6126aa5761263a90612633604061262b6020860161336b565b95940161336b565b33906148ea565b333b1561029a576040517f61eed7da000000000000000000000000000000000000000000000000000000008152600481019390935260008360248183335af1908115610489576100199461046b9461046593612697575b50613375565b8061047d6126a4926114d4565b38612691565b918194506103f4906105d060406126d394019161263360206126cb8561336b565b97990161336b565b9261263a565b3461029a5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5760043561271481610728565b60443567ffffffffffffffff811161029a5760009161274361273b8493369060040161029f565b6105e361512c565b9060208251920190602435905af1612759613184565b901561276157005b602081519101fd5b3461029a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa80156104895760209160009161281d575b50604051908152f35b6128349150823d8111610957576109488183611596565b38612814565b3461029a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5760043561287581610728565b6128d76000549161289d60ff8460081c16158094819561298f575b811561296f575b506132e0565b826128ce60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b6129395761508e565b6128dd57005b61290a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b61296a6101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b61508e565b303b15915081612981575b5038612897565b6001915060ff16143861297a565b600160ff8216109150612890565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b3461029a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5760043561100081101561029a5760209060020154604051908152f35b3461029a576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029a5767ffffffffffffffff6004803582811161029a57612a68903690830161048e565b9160243590811161029a57612a80903690830161029f565b9390612ac4612aa661037f600197610379612a9c8a5460601c90565b956103718a614e42565b73ffffffffffffffffffffffffffffffffffffffff80931614613567565b612ad360c085013542106135cc565b612ae24660e086013514613631565b60a084013591612af18361479e565b80850190612aff8287613f4b565b9460009150612b0d88613aba565b612b1681610f87565b612d5b57612b36612b2960608a0161336b565b60808a01359033906148ea565b333b1561029a5782517f4bf5afda0000000000000000000000000000000000000000000000000000000081528781019182529060009082908190602001038183335af1801561048957612d48575b50612b8e87613aba565b612b9781610f87565b612c5a5750600095939593602095868201955b888110612bb357005b612c149088612bc761037f61037f8b61336b565b612bdb83612bd58a89613f4b565b90613f9f565b3590875180809681947f6352211e0000000000000000000000000000000000000000000000000000000083528983019190602083019252565b03915afa918215610489578b92612c3791600091612c3d575b5088163014613696565b01612baa565b612c5491508b3d8d116113c7576113b98183611596565b38612c2d565b965092505073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6060850191612c828361336b565b1603612ca557505050612c9e6100199260804793013590613375565b11156140f8565b91602091612cbc61037f61037f612cf5989661336b565b90517f70a08231000000000000000000000000000000000000000000000000000000008152309281019283529586928391829160200190565b03915afa9081156104895761001993600092612d23575b506080612d1c9293013590613375565b1115614093565b612d1c9250612d4160809160203d8111610957576109488183611596565b9250612d0c565b8061047d612d55926114d4565b38612b84565b9050612d88612d6c6020890161336b565b612d80612d79868b613f4b565b3691613c19565b903390614aad565b612d976103f46060890161336b565b90612b36565b15612da457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152fd5b15612e2f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152fd5b9081602091031261029a575190565b6040513d6000823e3d90fd5b15612ed557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152fd5b803b15612fc15773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b9061304f82612f59565b73ffffffffffffffffffffffffffffffffffffffff82167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511580159061311c575b61309e575050565b61311991600080604051936130b2856114ed565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af4613113613184565b91613219565b50565b506000613096565b9061312e82612f59565b73ffffffffffffffffffffffffffffffffffffffff82167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511580159061317c5761309e575050565b506001613096565b3d156131af573d90613195826115f1565b916131a36040519384611596565b82523d6000602084013e565b606090565b156131bb57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015613239575081511561322d575090565b6104e6903b15156131b4565b82519091501561324c5750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106132c9575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201613288565b156132e757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b356104e681610728565b9190820180921161061f57565b81811061338d575050565b60008155600101613382565b90805160005b600281106133f3575050807fffffffffffffffffffffffffffffffff0000000000000000000000000000000060406fffffffffffffffffffffffffffffffff602060029501511692015160801b1617910155565b60019060208351930192818601550161339f565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b60c06104e69492803561345881610728565b73ffffffffffffffffffffffffffffffffffffffff809116845260208201356020850152604082013561348a81610728565b166040840152606081013560608401526080810135608084015260a081013560a0840152013560c0820152610100908160e08201520191613407565b6fffffffffffffffffffffffffffffffff908181116134e3571690565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f32382062697473000000000000000000000000000000000000000000000000006064820152fd5b1561356e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152fd5b156135d357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f73776170206578706972656400000000000000000000000000000000000000006044820152fd5b1561363857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c696420636861696e000000000000000000000000000000000000006044820152fd5b1561369d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f74616b657220646964206e6f74207472616e73666572000000000000000000006044820152fd5b6104e691613708916138a3565b91909161371a565b60051115610f9157565b61372381613710565b8061372b5750565b61373481613710565b6001810361379b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b6137a481613710565b6002810361380b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80613817600392613710565b1461381e57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9060418151146000146138cd57610322916020820151906060604084015193015160001a906138d7565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161395a5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561048957815173ffffffffffffffffffffffffffffffffffffffff811615613954579190565b50600190565b50505050600090600390565b60405191906000835b600282106139835750505061075182611541565b600160208192855481520193019101909161396f565b6000906139aa600282018092613382565b55565b156139b457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c6964206d616b6572000000000000000000000000000000000000006044820152fd5b15613a1957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6d616b657220646964206e6f74207472616e73666572000000000000000000006044820152fd5b8115613a81570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6002111561029a57565b356104e681613ab0565b909160c06104e69593613ae1848235613adc81613ab0565b610f96565b6020810135613aef81610728565b73ffffffffffffffffffffffffffffffffffffffff80911660208601526040820135613b1a81610728565b166040850152606081013560608501526080810135608085015260a081013560a0850152013560c083015260e082015261012090816101008201520191613407565b60a08101354210801590613bf3575b8015613be0575b613bd757613b7f81613aba565b613b8881610f87565b613bb657613bb3613b9e6103f46040840161336b565b916060613baa846106bc565b91013590613a77565b91565b906104e6610e4e6060613bce6103f46020870161336b565b940135846106d9565b50600090600090565b50613bee60808201356147d0565b613b72565b504660c08201351415613b6b565b67ffffffffffffffff81116114e85760051b60200190565b9291613c2482613c01565b91613c326040519384611596565b829481845260208094019160051b810192831161029a57905b828210613c585750505050565b81358152908301908301613c4b565b6002821015610f915752565b906002811015610f915760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b815160005b60028110613dbb575050602082810151805191600284019167ffffffffffffffff84116114e8576801000000000000000084116114e85781908354858555808610613d9e575b500191600052806000209060005b848110613d8c57505050505090613d4b60606003610751940192613d346040820151613d2e81610f87565b85613c73565b01516fffffffffffffffffffffffffffffffff1690565b7fffffffffffffffffffffffffffffff00000000000000000000000000000000ff70ffffffffffffffffffffffffffffffff0083549260081b169116179055565b83518382015592810192600101613d03565b613db5908560005286846000209182019101613382565b38613cf5565b600190602083519301928185015501613caf565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561029a57016020813591019167ffffffffffffffff821161029a578160051b3603831361029a57565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831161029a5760209260051b809284830137010190565b93916104e69593613ede9160e0613f3d9460608952613e8c8135613e8281613ab0565b60608b0190610f96565b613eba6020820135613e9d81610728565b73ffffffffffffffffffffffffffffffffffffffff1660808b0152565b613ec76040820182613dcf565b9590610100968760a08d01526101608c0191613e22565b94613f0b613eee60608401610746565b73ffffffffffffffffffffffffffffffffffffffff1660c08c0152565b6080820135838b015260a0820135908a015260c08101356101208a015201356101408801528683036020880152613e22565b926040818503910152613407565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561029a570180359067ffffffffffffffff821161029a57602001918160051b3603831361029a57565b9190811015613faf5760051b0190565b61299d565b15613fbb57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f696e76616c6964206964000000000000000000000000000000000000000000006044820152fd5b9081602091031261029a57516104e681610728565b1561403557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f74616b657220646964206e6f74207472616e73666572204e46540000000000006044820152fd5b1561409a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f74616b657220646964206e6f74207472616e7366657220746f6b656e730000006044820152fd5b156140ff57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f74616b657220646964206e6f74207472616e73666572206574686572000000006044820152fd5b9060405161416a81611509565b809261417581613966565b82526002810160405180918054808352602080930191600052826000209060005b8181106141fa575050506107519493836fffffffffffffffffffffffffffffffff936141c86060966003950383611596565b86015201546141dd60ff821660408601613c67565b60081c169101906fffffffffffffffffffffffffffffffff169052565b825484529284019260019283019201614196565b6003600091600281016142218183613382565b805484825580614232575b50500155565b6142459185526020852090810190613382565b388061422c565b8051821015613faf5760209160051b010190565b1561426757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d616b657220646964206e6f74207472616e73666572204e46540000000000006044820152fd5b156142cc57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6d616b657220646964206e6f74207472616e7366657220746f6b656e730000006044820152fd5b1561433157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6d616b657220646964206e6f74207472616e73666572206574686572000000006044820152fd5b9060005b82518110156143bd57816143a7828561424c565b51146143b557600101614393565b505050600190565b505050600090565b906143cf82613c01565b6143dc6040519182611596565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061440a8294613c01565b0190602036910137565b9060609160c0810135421080159061465c575b8015614649575b6131195760409061444182820182613f4b565b92905061444d836143c5565b9460009261445a81613aba565b61446381610f87565b6145a05760005b8581106144c9575050505061447e906143c5565b92600090815b8383106144915750505050565b6001809161449f858561424c565b516144ae575b01920191614484565b6144b8858561424c565b516144c3828a61424c565b526144a5565b6020614524816144e061037f61037f83880161336b565b6144ea858861424c565b5190885180809581947f6352211e000000000000000000000000000000000000000000000000000000008352600483019190602083019252565b03915afa9081156104895773ffffffffffffffffffffffffffffffffffffffff92600092614583575b505016300361455f575b60010161446a565b936001809161456e878661424c565b51614579888c61424c565b5201949050614557565b6145999250803d106113c7576113b98183611596565b388061454d565b835b8581106145b6575050505061447e906143c5565b60206145cd816144e061037f61037f83880161336b565b03915afa9081156104895773ffffffffffffffffffffffffffffffffffffffff9260009261462c575b5050163014614608575b6001016145a2565b9360018091614617878661424c565b51614622888c61424c565b5201949050614600565b6146429250803d106113c7576113b98183611596565b38806145f6565b5061465760a08201356147d0565b61442e565b504660e082013514614427565b1561467057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f696420746f6f20686967680000000000000000000000000000000000000000006044820152fd5b156146d557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f696420616c7265616479207573656400000000000000000000000000000000006044820152fd5b614742620fffff821115614669565b8060081c60ff821691611000821015613faf577fc2d10c01310d9afe5128313b0d440f5e50d003b007e8721ab7d0f2454ad255de926020926002019060018254916147918284831c16156146ce565b1b179055604051908152a1565b6147ad620fffff821115614669565b8060081c611000811015613faf57600201546107519160ff161c600116156146ce565b6147df620fffff821115614669565b8060081c611000811015613faf5760019160ff83926002015491161c161490565b6040519293929160209161481384611541565b60403685377bffffffffffffffff0000000000000000000000000000000000000000849673ffffffffffffffffffffffffffffffffffffffff92837fffffffffffffffffffffffff00000000000000000000000000000000000000008360a01b16911617865260401b16911617910152565b1561488c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6661696c6564206574686572207472616e7366657200000000000000000000006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036149365750600080806107519481945af1614930613184565b50614885565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000006020820190815273ffffffffffffffffffffffffffffffffffffffff9390931660248201526044808201949094529283526149e5929160009081906149a0606486611596565b604051946149ad86611541565b602086527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020870152519082855af1613113613184565b8051806149f0575050565b81602080614a05936107519501019101614a0a565b614a22565b9081602091031261029a5751801515810361029a5790565b15614a2957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b9082519160005b838110614ac2575050505050565b73ffffffffffffffffffffffffffffffffffffffff821690614ae4818761424c565b5191803b1561029a576040517f23b872dd00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8616602482015260448101939093526000908390606490829084905af191821561048957600192614b61575b5001614ab4565b614b6a906114d4565b38614b5a565b73ffffffffffffffffffffffffffffffffffffffff1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8103614ba657504790565b6020602491604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa90811561048957600091614bef575090565b6104e6915060203d8111610957576109488183611596565b60009073ffffffffffffffffffffffffffffffffffffffff1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8103614c4357505047101590565b6020602491604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa9182156104895791614c8d575b50101590565b614ca5915060203d8111610957576109488183611596565b38614c87565b6104e6908035614cba81610728565b60c0604083013592614ccb84610728565b6040519260208401947fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809260601b1686526020830135603486015260601b166054840152606081013560688401526080810135608884015260a081013560a8840152013560c882015260c88152614d428161155d565b5190205b60405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c8152614d83816114ed565b51902090565b6002811015610f915760f81b9052565b6104e690803590614da982613ab0565b60c0602082013591614dba83610728565b604081013592614dc984610728565b60405193614ddb602086018097614d89565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809260601b16602186015260601b166035840152606081013560498401526080810135606984015260a08101356089840152013560a982015260a98152614d428161157a565b8035614e4d81613ab0565b6020820135614e5b81610728565b614e686040840184613f4b565b939091606082013592614e7a84610728565b60405193614e8c602086018097614d89565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809360601b1660218601527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff871161029a5760e0614d429460c99487946104e69a60051b8091603588013785019360601b1660358401526080810135604984015260a0810135606984015260c08101356089840152013560a98201520360a9810184520182611596565b6040805173ffffffffffffffffffffffffffffffffffffffff9290921660208301908152828201939093528152614d83606082611596565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561029a570180359067ffffffffffffffff821161029a5760200191813603831361029a57565b80614fc85750565b600080808093337ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff150613119613184565b60015460601c3314801561506e575b1561501057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b50303314615009565b90821015613faf576103229160051b810190614f6f565b6bffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006001549260601b169116178060015560601c73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de600080a3565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016331480156151d1575b1561517357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b5060015460601c331461516c565b9061522261370861520473ffffffffffffffffffffffffffffffffffffffff93614d46565b61521c6105e360015460601c96610140810190614f6f565b906138a3565b160361522d57600090565b600190565b600091829182602083519301915af1615249613184565b9015612761575056fea2646970667358221220333c22ebd702f91674764a71102fb6134781366d94fc9c3cdd5ad278c97e3e5264736f6c63430008130033";

type DexWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DexWallet__factory extends ContractFactory {
  constructor(...args: DexWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DexWallet> {
    return super.deploy(anEntryPoint, overrides || {}) as Promise<DexWallet>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override attach(address: string): DexWallet {
    return super.attach(address) as DexWallet;
  }
  override connect(signer: Signer): DexWallet__factory {
    return super.connect(signer) as DexWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexWalletInterface {
    return new utils.Interface(_abi) as DexWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DexWallet {
    return new Contract(address, _abi, signerOrProvider) as DexWallet;
  }
}
