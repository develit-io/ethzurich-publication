/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../../contracts/account-abstraction/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523462000084576102148181016001600160401b038111838210176200006e5782916200563b833903906000f0801562000062576080526040516155b190816200008a82396080518181816112b9015281816138700152613b830152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610023575b361561001957600080fd5b610021614e72565b005b60003560e01c80630396cb60146101335780631d7327561461012e5780631fad948c14610129578063205c2878146101245780634b1d7cf51461011f5780635287ce121461011a57806370a08231146101155780638f41ec5a14610110578063957122ab1461010b5780639b249f6914610106578063a619353114610101578063b760faf9146100fc578063bb9fe6bf146100f7578063c23a5cea146100f2578063d6383f94146100ed578063ee219423146100e85763fc7e286d0361000e57611a9b565b611884565b61171d565b611585565b611408565b6113ca565b6113aa565b611214565b611042565b611008565b610f84565b610e35565b610b0b565b61096d565b6106be565b6104ec565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d85760043563ffffffff81168082036102d8576102d37fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01916101f06101c03373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b916101cc811515614fca565b6101e96101e0600185015463ffffffff1690565b63ffffffff1690565b111561502f565b54926102b56dffffffffffffffffffffffffffff9461027361021734888460781c16611fe9565b96610223881515615094565b61022f818911156150f9565b6102538161023b6103bb565b941684906dffffffffffffffffffffffffffff169052565b6001602084015287166dffffffffffffffffffffffffffff166040830152565b63ffffffff83166060820152600060808201526102b03373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61515e565b6040805194855263ffffffff90911660208501523393918291820190565b0390a2005b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761032857604052565b6102dd565b610100810190811067ffffffffffffffff82111761032857604052565b67ffffffffffffffff811161032857604052565b6060810190811067ffffffffffffffff82111761032857604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761032857604052565b604051906103c88261030c565b565b6040519060c0820182811067ffffffffffffffff82111761032857604052565b604051906040820182811067ffffffffffffffff82111761032857604052565b67ffffffffffffffff811161032857601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9291926104508261040a565b9161045e604051938461037a565b8294818452818301116102d8578281602093846000960137010152565b73ffffffffffffffffffffffffffffffffffffffff8116036102d857565b602435906103c88261047b565b60c435906103c88261047b565b35906103c88261047b565b9181601f840112156102d85782359167ffffffffffffffff83116102d857602083818601950101116102d857565b346102d8576101c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d85767ffffffffffffffff6004358181116102d857366023820112156102d85761054e903690602481600401359101610444565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc360161018081126102d8576101006040519161058b8361030c565b126102d85760405161059c8161032d565b6105a4610499565b815260443560208201526064356040820152608435606082015260a43560808201526105ce6104a6565b60a082015260e43560c08201526101043560e082015281526101243560208201526101443560408201526101643560608201526101843560808201526101a4359182116102d8576106429261062a6106329336906004016104be565b9290916126aa565b6040519081529081906020820190565b0390f35b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126102d85760043567ffffffffffffffff928382116102d857806023830112156102d85781600401359384116102d85760248460051b830101116102d85760240191906024356106bb8161047b565b90565b346102d8576106cc36610646565b6106d7829392611bcb565b60005b848110610729575060009283915b8583106106f9576100218585611cf0565b90919360019061071f61070d878987611c80565b6107178886611c67565b519088612153565b01940191906106e8565b61075461074d61073b83859795611c67565b51610747848987611c80565b84612ec4565b9190612c9b565b73ffffffffffffffffffffffffffffffffffffffff929183166108ff576108915761077e90612c9b565b911661082357610793576001019290926106da565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a490fd5b0390fd5b61081f826040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601460408201527f41413334207369676e6174757265206572726f7200000000000000000000000060608201520190565b61081f836040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601760408201527f414132322065787069726564206f72206e6f742064756500000000000000000060608201520190565b61081f846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601460408201527f41413234207369676e6174757265206572726f7200000000000000000000000060608201520190565b346102d85760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d8576004356109a88161047b565b6024359060009133835282602052604083206dffffffffffffffffffffffffffff81541692838311610aad57848373ffffffffffffffffffffffffffffffffffffffff829593610a508496610a17610a048798610aaa9c611fd7565b6dffffffffffffffffffffffffffff1690565b6dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b6040805173ffffffffffffffffffffffffffffffffffffffff831681526020810185905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a2165af1610aa4611cc0565b506154d5565b80f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152fd5b346102d857610b1936610646565b6000805b838210610cdb57610b2e9150611bcb565b6000805b848110610c4157505060008093815b818110610b7857610021868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a2611cf0565b610bdc610b8682848a6122d2565b610bb1610b98610b9860208401612366565b73ffffffffffffffffffffffffffffffffffffffff1690565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d600080a280612312565b906000915b808310610bf957505050610bf4906122a5565b610b41565b90919497610c34610c2e610c3a92610c288c8b610c2182610c1b8e8b8d611c80565b92611c67565b5191612153565b90611fe9565b996122a5565b956122a5565b9190610be1565b610c4c8186886122d2565b6020610c64610c5b8380612312565b92909301612366565b9173ffffffffffffffffffffffffffffffffffffffff60009316905b828410610c995750505050610c94906122a5565b610b32565b90919294610c3481610cce85610cc7610cb5610cd3968d611c67565b51610cc18c8b8a611c80565b85612ec4565b908b612c53565b6122a5565b929190610c80565b610ce68285876122d2565b90610cf18280612312565b92610d01610b9860208301612366565b9173ffffffffffffffffffffffffffffffffffffffff8316610d266001821415612370565b610d47575b505050610d4191610d3b91611fe9565b916122a5565b90610b1d565b909592610d606040999693999895989788810190611de1565b92908a3b156102d85789938b918a5193849283927fe3563a4f00000000000000000000000000000000000000000000000000000000845260049e8f850193610da79461250a565b03815a93600094fa9081610e1c575b50610e065786517f86a9f75000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16818a0190815281906020010390fd5b9497509295509093509181610d3b610d41610d2b565b80610e29610e2f9261034a565b80610ffd565b38610db6565b346102d85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d85761064273ffffffffffffffffffffffffffffffffffffffff600435610e888161047b565b608060409283928351610e9a8161030c565b600093818580935282602082015282878201528260608201520152168152806020522090610f2965ffffffffffff6001835194610ed68661030c565b80546dffffffffffffffffffffffffffff8082168852607082901c60ff161515602089015260789190911c1685870152015463ffffffff8116606086015260201c16608084019065ffffffffffff169052565b5191829182919091608065ffffffffffff8160a08401956dffffffffffffffffffffffffffff808251168652602082015115156020870152604082015116604086015263ffffffff6060820151166060860152015116910152565b346102d85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d85773ffffffffffffffffffffffffffffffffffffffff600435610fd48161047b565b16600052600060205260206dffffffffffffffffffffffffffff60406000205416604051908152f35b60009103126102d857565b346102d85760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d857602060405160018152f35b346102d85760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d857600467ffffffffffffffff81358181116102d85761109290369084016104be565b9050602435916110a18361047b565b6044359081116102d8576110b890369085016104be565b92909115908161120a575b506111a3576014821015611113575b61081f836040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160409060208152600060208201520190565b61112361112f92611129926128b3565b906128c1565b60601c90565b3b1561113c5738806110d2565b61081f906040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160609060208152601b60208201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060408201520190565b61081f836040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160609060208152601960208201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060408201520190565b90503b15386110c3565b346102d85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d85760043567ffffffffffffffff81116102d8576112639036906004016104be565b906112996040519283927f570e1a3600000000000000000000000000000000000000000000000000000000845260048401612a57565b0360208273ffffffffffffffffffffffffffffffffffffffff92816000857f0000000000000000000000000000000000000000000000000000000000000000165af190811561134d5760249260009261131d575b50604051917f6ca7b806000000000000000000000000000000000000000000000000000000008352166004820152fd5b61133f91925060203d8111611346575b611337818361037a565b810190612a42565b90386112ed565b503d61132d565b611f9c565b90816101609103126102d85790565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126102d8576004359067ffffffffffffffff82116102d8576106bb91600401611352565b346102d85760206113c26113bd36611361565b612805565b604051908152f35b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d8576100216004356114038161047b565b614f5e565b346102d8576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112611582573381528060205260408120600181019063ffffffff825416908115611524576114c16114866114e993611478611473855460ff9060701c1690565b6152c2565b65ffffffffffff4216615327565b84547fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff16602082901b69ffffffffffff000000001617909455565b7fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff8154169055565b60405165ffffffffffff91909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a280f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152fd5b80fd5b346102d85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d8576004356115c08161047b565b610aaa73ffffffffffffffffffffffffffffffffffffffff6116023373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b926116ba611625610a0486546dffffffffffffffffffffffffffff9060781c1690565b94611631861515615341565b6116926001820161166a65ffffffffffff611656835465ffffffffffff9060201c1690565b166116628115156153a6565b42101561540b565b80547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055565b7fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff8154169055565b6040805173ffffffffffffffffffffffffffffffffffffffff831681526020810186905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a2600080809581948294165af1611717611cc0565b50615470565b346102d85760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d85767ffffffffffffffff6004358181116102d85761176d903690600401611352565b6024359161177a8361047b565b6044359081116102d85761179561081f9136906004016104be565b61179d611b68565b6117a685612b56565b6117b96117b38287612d5c565b90614d6b565b946117c982600092438452611ff6565b96438252819360609573ffffffffffffffffffffffffffffffffffffffff8316611850575b50505050608001519361181d604061180f602084015165ffffffffffff1690565b92015165ffffffffffff1690565b906040519687967f8b7ac980000000000000000000000000000000000000000000000000000000008852600488016125da565b8395508394965061186a60409492939451809481936125cc565b03925af1906080611879611cc0565b9291903880806117ee565b346102d85761189236611361565b61189a611b68565b6118a382612b56565b6118ad8183612d5c565b825160a001519193916118da9073ffffffffffffffffffffffffffffffffffffffff16614e1d565b614e1d565b906118fe6118d5855173ffffffffffffffffffffffffffffffffffffffff90511690565b94611907612889565b5061193661191a60409586810190611de1565b90600060148310611a9357506111236118d592611129926128b3565b9161194091614d6b565b805173ffffffffffffffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8216600181149160808801519787810151918860208201516119959065ffffffffffff1690565b91015165ffffffffffff169160600151926119ae6103ca565b9a8b5260208b0152841515898b015265ffffffffffff1660608a015265ffffffffffff16608089015260a088015215159081611a8a575b50611a1f575061081f92519485947fe0cff05f000000000000000000000000000000000000000000000000000000008652600486016129e8565b919061081f93611a2e84614e1d565b611a55611a396103ea565b73ffffffffffffffffffffffffffffffffffffffff9096168652565b6020850152519586957ffaecb4e400000000000000000000000000000000000000000000000000000000875260048701612956565b905015386119e5565b915050614e1d565b346102d85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d85773ffffffffffffffffffffffffffffffffffffffff600435611aeb8161047b565b16600052600060205260a0604060002065ffffffffffff60018254920154604051926dffffffffffffffffffffffffffff90818116855260ff8160701c161515602086015260781c16604084015263ffffffff8116606084015260201c166080820152f35b67ffffffffffffffff81116103285760051b60200190565b60405190611b758261030c565b604051608083611b848361032d565b60009283815283602082015283604082015283606082015283838201528360a08201528360c08201528360e082015281528260208201528260408201528260608201520152565b90611bd582611b50565b611be2604051918261037a565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611c108294611b50565b019060005b828110611c2157505050565b602090611c2c611b68565b82828501015201611c15565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8051821015611c7b5760209160051b010190565b611c38565b9190811015611c7b5760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1813603018212156102d8570190565b3d15611ceb573d90611cd18261040a565b91611cdf604051938461037a565b82523d6000602084013e565b606090565b73ffffffffffffffffffffffffffffffffffffffff168015611d8357600080809381935af1611d1d611cc0565b5015611d2557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102d8570180359067ffffffffffffffff82116102d8576020019181360383136102d857565b908160209103126102d8575190565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b60005b838110611e935750506000910152565b8181015183820152602001611e83565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093611edf81518092818752878088019101611e80565b0116010190565b90611f006080916106bb96946101c0808652850191611e41565b9360e0815173ffffffffffffffffffffffffffffffffffffffff80825116602087015260208201516040870152604082015160608701526060820151858701528482015160a087015260a08201511660c086015260c081015182860152015161010084015260208101516101208401526040810151610140840152606081015161016084015201516101808201526101a0818403910152611ea3565b6040513d6000823e3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908203918211611fe457565b611fa8565b91908201809211611fe457565b905a9181602061200f6060830151936060810190611de1565b906120488560405195869485947f1d73275600000000000000000000000000000000000000000000000000000000865260048601611ee6565b03816000305af160009181612123575b5061211c575060206000803e7fdeaddead00000000000000000000000000000000000000000000000000000000600051146120af576120a961209e6106bb945a90611fd7565b608084015190611fe9565b916144bb565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152600f60408201527f41413935206f7574206f6620676173000000000000000000000000000000000060608201520190565b9250505090565b61214591925060203d811161214c575b61213d818361037a565b810190611e32565b9038612058565b503d612133565b909291925a9380602061216f6060830151946060810190611de1565b906121a88660405195869485947f1d73275600000000000000000000000000000000000000000000000000000000865260048601611ee6565b03816000305af160009181612285575b5061227e575060206000803e7fdeaddead00000000000000000000000000000000000000000000000000000000600051146122105761220a6121ff6106bb95965a90611fd7565b608083015190611fe9565b9261479e565b61081f836040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152600f60408201527f41413935206f7574206f6620676173000000000000000000000000000000000060608201520190565b9450505050565b61229e91925060203d811161214c5761213d818361037a565b90386121b8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611fe45760010190565b9190811015611c7b5760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1813603018212156102d8570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102d8570180359067ffffffffffffffff82116102d857602001918160051b360383136102d857565b356106bb8161047b565b1561237757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156102d857016020813591019167ffffffffffffffff82116102d85781360383136102d857565b6106bb9161245081612436846104b3565b73ffffffffffffffffffffffffffffffffffffffff169052565b602082013560208201526124eb61249c61248161247060408601866123d5565b610160806040880152860191611e41565b61248e60608601866123d5565b908583036060870152611e41565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e084015261010080850135908401526101206124de818601866123d5565b9185840390860152611e41565b916124fc61014091828101906123d5565b929091818503910152611e41565b949391929083604087016040885252606086019360608160051b8801019482600090815b84831061254d575050505050508460206106bb95968503910152611e41565b9091929394977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08b820301855288357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1843603018112156125c857600191846125b69201612425565b9860209081019695019301919061252e565b8280fd5b908092918237016000815290565b9290936106bb96959260c0958552602085015265ffffffffffff8092166040850152166060830152151560808201528160a08201520190611ea3565b1561261d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152fd5b9060406106bb92600081528160208201520190611ea3565b6040906106bb939281528160208201520190611ea3565b909291925a936126bb303314612616565b8151946040860151955a6113886060830151890101116127db576106bb966000958051612702575b505050906126fc915a9003608084015101943691610444565b91614a06565b6127319161272d91612728855173ffffffffffffffffffffffffffffffffffffffff1690565b61553a565b1590565b61273d575b80806126e3565b6126fc9291945061274c61554c565b908151612760575b50506001939091612736565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a20173ffffffffffffffffffffffffffffffffffffffff6020870151926127d160206127bf835173ffffffffffffffffffffffffffffffffffffffff1690565b92015195604051938493169683612693565b0390a33880612754565b7fdeaddead0000000000000000000000000000000000000000000000000000000060005260206000fd5b80612814610140820182611de1565b50037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081016040519182016040528082526020820192833751902060405160208101918252306040820152466060820152606081526080810181811067ffffffffffffffff8211176103285760405251902090565b604051906040820182811067ffffffffffffffff8211176103285760405260006020838281520152565b906014116102d85790601490565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090358181169392601481106128f657505050565b60140360031b82901b16169150565b9060c060a06106bb93805184526020810151602085015260408101511515604085015265ffffffffffff80606083015116606086015260808201511660808501520151918160a08201520190611ea3565b92946129b76103c8956129a561010095999861299361297f602097610140808c528b0190612905565b9b878a019060208091805184520151910152565b80516060890152602001516080880152565b805160a08701526020015160c0860152565b73ffffffffffffffffffffffffffffffffffffffff81511660e0850152015191019060208091805184520151910152565b612a316103c894612a1f612a0a60a0959998969960e0865260e0860190612905565b98602085019060208091805184520151910152565b80516060840152602001516080830152565b019060208091805184520151910152565b908160209103126102d857516106bb8161047b565b9160206106bb938181520191611e41565b90612a9773ffffffffffffffffffffffffffffffffffffffff916106bb97959694606085526060850191611e41565b941660208201526040818503910152611e41565b60009060033d11612ab857565b905060046000803e60005160e01c90565b600060443d106106bb576040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc91823d016004833e815167ffffffffffffffff918282113d602484011117612b4557818401948551938411612b4d573d85010160208487010111612b4557506106bb9291016020019061037a565b949350505050565b50949350505050565b612b636040820182611de1565b612b7b612b6f84612366565b93610120810190611de1565b9290303b156102d857600093612bbf9160405196879586957f957122ab00000000000000000000000000000000000000000000000000000000875260048701612a68565b0381305afa9081612c40575b506103c8576001612bda612aab565b6308c379a014612beb575b61134d57565b612bf3612ac9565b80612bff575b50612be5565b80516000925015612bf95761081f906040519182917f220266b60000000000000000000000000000000000000000000000000000000083526004830161267b565b80610e29612c4d9261034a565b38612bcb565b929190612c5f90612c9b565b909273ffffffffffffffffffffffffffffffffffffffff808095169116036108ff5761089157612c8e90612c9b565b9116610823576107935750565b8015612cee57612caa90614d10565b73ffffffffffffffffffffffffffffffffffffffff65ffffffffffff806040840151164211908115612cde575b5091511691565b9050602083015116421038612cd7565b50600090600090565b15612cfe57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152fd5b916000915a93815190612d6f828261308e565b612d7881612805565b6020840152612db66effffffffffffffffffffffffffffff60808401516060850151176040850151176101008401359060e085013517171115612cf7565b612dbf82613150565b612dca818584613211565b9790612dd543600052565b73ffffffffffffffffffffffffffffffffffffffff612e0d60a0606097015173ffffffffffffffffffffffffffffffffffffffff1690565b16612eaa575b505a810360a084013510612e3d5760809360c092604087015260608601525a900391013501910152565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152601e60408201527f41413430206f76657220766572696669636174696f6e4761734c696d6974000060608201520190565b90935081612ebb9297508584613f1b565b95909238612e13565b9290916000925a8251612ed7818461308e565b612ee083612805565b6020850152612f1e6effffffffffffffffffffffffffffff60808301516060840151176040840151176101008601359060e087013517171115612cf7565b612f2781613150565b612f338186868b61357d565b9890612f3e43600052565b73ffffffffffffffffffffffffffffffffffffffff612f7660a0606096015173ffffffffffffffffffffffffffffffffffffffff1690565b1661300e575b505a840360a086013510612fa85750604085015260608401526080919060c0905a900391013501910152565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b909250816130209298508686856141ae565b96909138612f7c565b1561303057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152fd5b613100906130b861309e82612366565b73ffffffffffffffffffffffffffffffffffffffff168452565b602081013560208401526080810135604084015260a0810135606084015260c0810135608084015260e081013560c084015261010081013560e0840152610120810190611de1565b9081156131455761312a6111296111238460a09461312560146103c899981015613029565b6128b3565b73ffffffffffffffffffffffffffffffffffffffff16910152565b505060a06000910152565b60a081015173ffffffffffffffffffffffffffffffffffffffff16156131925760c060035b60ff60408401519116606084015102016080830151019101510290565b60c06001613175565b6131b360409295949395606083526060830190612425565b9460208201520152565b906103c8602f60405180947f414132332072657665727465643a20000000000000000000000000000000000060208301526132018151809260208686019101611e80565b810103600f81018552018361037a565b916000926000925a936132df6020835193613240855173ffffffffffffffffffffffffffffffffffffffff1690565b956132586132516040830183611de1565b90846137e8565b60a086015173ffffffffffffffffffffffffffffffffffffffff169061327d43600052565b85809373ffffffffffffffffffffffffffffffffffffffff809416159889613515575b60600151908601516040517f3a871cdd00000000000000000000000000000000000000000000000000000000815297889687958693906004850161319b565b03938a1690f18291816134f5575b506134ec57506001906132fe612aab565b6308c379a014613498575b5061342b575b61331c575b50505a900391565b6133469073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b613361610a0482546dffffffffffffffffffffffffffff1690565b8083116133be576133b7926dffffffffffffffffffffffffffff9103166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b3880613314565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152601760408201527f41413231206469646e2774207061792070726566756e6400000000000000000060608201520190565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152601660408201527f4141323320726576657274656420286f72204f4f47290000000000000000000060608201520190565b6134a0612ac9565b90816134ac5750613309565b61081f916134ba91506131bd565b6040519182917f220266b60000000000000000000000000000000000000000000000000000000083526004830161267b565b955061330f9050565b61350e91925060203d811161214c5761213d818361037a565b90386132ed565b945061355b610a046135478c73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b546dffffffffffffffffffffffffffff1690565b8b8111156135725750856060835b969150506132a0565b606087918d03613569565b90926000936000935a946135c660208351936135ad855173ffffffffffffffffffffffffffffffffffffffff1690565b956132586135be6040830183611de1565b90848c613af8565b03938a1690f18291816137c8575b506137bf57506001906135e5612aab565b6308c379a014613769575b506136fb575b613604575b5050505a900391565b61362e9073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9161364a610a0484546dffffffffffffffffffffffffffff1690565b90818311613695575082547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000169190036dffffffffffffffffffffffffffff161790553880806135fb565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152608490fd5b61081f846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601660408201527f4141323320726576657274656420286f72204f4f47290000000000000000000060608201520190565b613771612ac9565b908161377d57506135f0565b869161378991506131bd565b9061081f6040519283927f220266b600000000000000000000000000000000000000000000000000000000845260048401612693565b96506135f69050565b6137e191925060203d811161214c5761213d818361037a565b90386135d4565b9091806137f457505050565b81515173ffffffffffffffffffffffffffffffffffffffff1692833b613a8b57606083510151604051907f570e1a3600000000000000000000000000000000000000000000000000000000825260208280613853878760048401612a57565b0381600073ffffffffffffffffffffffffffffffffffffffff95867f00000000000000000000000000000000000000000000000000000000000000001690f191821561134d57600092613a6b575b508082169586156139fe5716809503613991573b15613924576111296111237fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d936138eb936128b3565b602083810151935160a001516040805173ffffffffffffffffffffffffffffffffffffffff9485168152939091169183019190915290a3565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152602060408201527f4141313520696e6974436f6465206d757374206372656174652073656e64657260608201520190565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152602060408201527f4141313420696e6974436f6465206d7573742072657475726e2073656e64657260608201520190565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152601b60408201527f4141313320696e6974436f6465206661696c6564206f72204f4f47000000000060608201520190565b613a8491925060203d811161134657611337818361037a565b90386138a1565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152601f60408201527f414131302073656e64657220616c726561647920636f6e73747275637465640060608201520190565b92909181613b07575b50505050565b82515173ffffffffffffffffffffffffffffffffffffffff1693843b613da157606084510151604051907f570e1a3600000000000000000000000000000000000000000000000000000000825260208280613b66888860048401612a57565b0381600073ffffffffffffffffffffffffffffffffffffffff95867f00000000000000000000000000000000000000000000000000000000000000001690f191821561134d57600092613d81575b50808216968715613d135716809603613ca5573b15613c3f57506111296111237fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d93613bff936128b3565b602083810151935160a001516040805173ffffffffffffffffffffffffffffffffffffffff9485168152939091169183019190915290a338808080613b01565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b61081f826040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152602060408201527f4141313420696e6974436f6465206d7573742072657475726e2073656e64657260608201520190565b61081f846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601b60408201527f4141313320696e6974436f6465206661696c6564206f72204f4f47000000000060608201520190565b613d9a91925060203d811161134657611337818361037a565b9038613bb4565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b15613e0e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152fd5b91906040838203126102d857825167ffffffffffffffff81116102d85783019080601f830112156102d857815191613ea38361040a565b91613eb1604051938461037a565b838352602084830101116102d857602092613ed191848085019101611e80565b92015190565b906103c8602f60405180947f414133332072657665727465643a20000000000000000000000000000000000060208301526132018151809260208686019101611e80565b939192606094600094600093805192613f5a60a08a86015195613f3f888811613e07565b015173ffffffffffffffffffffffffffffffffffffffff1690565b91613f858373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b94613fa1610a0487546dffffffffffffffffffffffffffff1690565b968588106141415773ffffffffffffffffffffffffffffffffffffffff60208a98946140178a966dffffffffffffffffffffffffffff8b6140509e03166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b015194604051998a98899788937ff465c77e0000000000000000000000000000000000000000000000000000000085526004850161319b565b0395169103f190818391849361411b575b50614114575050600190614073612aab565b6308c379a0146140f2575b5061408557565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152601660408201527f4141333320726576657274656420286f72204f4f47290000000000000000000060608201520190565b6140fa612ac9565b9081614106575061407e565b61081f916134ba9150613ed7565b9450925050565b90925061413a91503d8085833e614132818361037a565b810190613e6c565b9138614061565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b9194929390936060956000956000938251906141d560a08b84015193613f3f848611613e07565b936142008573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61421b610a0482546dffffffffffffffffffffffffffff1690565b878110614376579273ffffffffffffffffffffffffffffffffffffffff60208a989693946140178a966dffffffffffffffffffffffffffff8d6142959e9c9a03166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b0395169103f1908183918493614358575b506143505750506001906142b8612aab565b6308c379a014614331575b506142cb5750565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601660448201527f4141333320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b614339612ac9565b908161434557506142c3565b613789925050613ed7565b955093505050565b90925061436f91503d8085833e614132818361037a565b91386142a6565b61081f8a6040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b600311156143ee57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b92919061443b60409160028652606060208701526060860190611ea3565b930152565b9392919060038110156143ee5760409161443b918652606060208701526060860190611ea3565b906103c8603660405180947f4141353020706f73744f702072657665727465643a200000000000000000000060208301526144ab8151809260208686019101611e80565b810103601681018552018361037a565b929190925a936000918051916144d083614cc9565b9260a08101956144f4875173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff9390848116908161466357505050614535825173ffffffffffffffffffffffffffffffffffffffff1690565b985b5a900301938402976040840190898251106145f6577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f946145816020928c6145f195510390614e7b565b0151948960206145c36145a8865173ffffffffffffffffffffffffffffffffffffffff1690565b9a5173ffffffffffffffffffffffffffffffffffffffff1690565b9401519785604051968796169a16988590949392606092608083019683521515602083015260408201520152565b0390a4565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152602060408201527f414135312070726566756e642062656c6f772061637475616c476173436f737460608201520190565b9a918051614673575b5050614537565b6060850151600099509091803b1561479a5791899189836146c6956040518097819682957fa9a234090000000000000000000000000000000000000000000000000000000084528c02906004840161441d565b0393f19081614787575b506147825760016146df612aab565b6308c379a014614763575b6146f6575b388061466c565b6040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152601260408201527f4141353020706f73744f7020726576657274000000000000000000000000000060608201520190565b61476b612ac9565b8061477657506146ea565b6134ba61081f91614467565b6146ef565b80610e296147949261034a565b386146d0565b8980fd5b9392915a906000928051906147b282614cc9565b9360a08301966147d6885173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff959086811690816148cc57505050614817845173ffffffffffffffffffffffffffffffffffffffff1690565b915b5a9003019485029860408301908a82511061486657507f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f9493926145816145f1938c602094510390614e7b565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b939180516148dc575b5050614819565b606087015160009a509091803b15614a0257918a918a8361492f956040518097819682957fa9a234090000000000000000000000000000000000000000000000000000000084528c02906004840161441d565b0393f190816149ef575b506149ea576001614948612aab565b6308c379a0146149cd575b61495f575b38806148d5565b61081f8b6040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601260408201527f4141353020706f73744f7020726576657274000000000000000000000000000060608201520190565b6149d5612ac9565b806149e05750614953565b6137898d91614467565b614958565b80610e296149fc9261034a565b38614939565b8a80fd5b909392915a94805191614a1883614cc9565b9260a0810195614a3c875173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff938185169182614b2457505050614a7c825173ffffffffffffffffffffffffffffffffffffffff1690565b985b5a900301938402976040840190898251106145f6577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f94614ac86020928c6145f195510390614e7b565b614ad1886143e4565b015194896020614af86145a8865173ffffffffffffffffffffffffffffffffffffffff1690565b940151604080519182529815602082015297880152606087015290821695909116939081906080820190565b9a918151614b34575b5050614a7e565b878402614b408a6143e4565b60028a14614bbd576060860151823b156102d857614b9393600080948d604051978896879586937fa9a2340900000000000000000000000000000000000000000000000000000000855260048501614440565b0393f1801561134d57614baa575b505b3880614b2d565b80610e29614bb79261034a565b38614ba1565b6060860151823b156102d857614c0893600080948d604051978896879586937fa9a2340900000000000000000000000000000000000000000000000000000000855260048501614440565b0393f19081614cb6575b50614cb1576001614c21612aab565b6308c379a014614c9e575b15614ba3576040517f220266b60000000000000000000000000000000000000000000000000000000081528061081f600482016080906000815260406020820152601260408201527f4141353020706f73744f7020726576657274000000000000000000000000000060608201520190565b614ca6612ac9565b806147765750614c2c565b614ba3565b80610e29614cc39261034a565b38614c12565b60e060c0820151910151808214614ced57480180821015614ce8575090565b905090565b5090565b60405190614cfe8261035e565b60006040838281528260208201520152565b614d18614cf1565b5065ffffffffffff808260a01c168015614d64575b60405192614d3a8461035e565b73ffffffffffffffffffffffffffffffffffffffff8116845260d01c602084015216604082015290565b5080614d2d565b614d80614d8691614d7a614cf1565b50614d10565b91614d10565b9073ffffffffffffffffffffffffffffffffffffffff9182825116928315614e12575b65ffffffffffff928391826040816020850151169301511693836040816020840151169201511690808410614e0a575b50808511614e02575b5060405195614df08761035e565b16855216602084015216604082015290565b935038614de2565b925038614dd9565b815181169350614da9565b9073ffffffffffffffffffffffffffffffffffffffff614e3b612889565b9216600052600060205263ffffffff600160406000206dffffffffffffffffffffffffffff815460781c1685520154166020830152565b6103c833614f5e565b73ffffffffffffffffffffffffffffffffffffffff16600052600060205260406000206dffffffffffffffffffffffffffff80825416928301809311611fe457808311614f00576103c892166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6465706f736974206f766572666c6f77000000000000000000000000000000006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff90614f7e3482614e7b565b168060005260006020527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c460206dffffffffffffffffffffffffffff60406000205416604051908152a2565b15614fd157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152fd5b1561503657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152fd5b1561509b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152fd5b1561510057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152fd5b9065ffffffffffff608060016103c8946151be6dffffffffffffffffffffffffffff86511682906dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b602085015115156eff000000000000000000000000000082549160701b16807fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff83161783557fffffff000000000000000000000000000000ffffffffffffffffffffffffffff7cffffffffffffffffffffffffffff000000000000000000000000000000604089015160781b16921617178155019263ffffffff6060820151167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000008554161784550151167fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff69ffffffffffff0000000083549260201b169116179055565b156152c957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152fd5b91909165ffffffffffff80809416911601918211611fe457565b1561534857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152fd5b156153ad57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152fd5b1561541257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152fd5b1561547757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152fd5b156154dc57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152fd5b9060009283809360208451940192f190565b3d610800808211615573575b50604051906020818301016040528082526000602083013e90565b90503861555856fea2646970667358221220ff0902fc9d194e65586a7143a2dc1102e5eeb315b384a9afe1bf72ab5b522f2b64736f6c6343000813003360808060405234610016576101f8908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b346100c95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c95760043567ffffffffffffffff918282116100c957366023830112156100c95781600401359283116100c95736602484840101116100c9576100c561009e84602485016100fb565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b80fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90806014116101b85767ffffffffffffffff917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec82018381116101bd57604051937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81600b8701160116850190858210908211176101bd57604052808452602084019036848401116101b8576020946000600c819682946014880187378301015251923560601c5af19060005191156101b257565b60009150565b600080fd5b6100cc56fea26469706673582212206d02085d224afee2071a9b909a143235dcab586904fb8dfb96ead3f9974eeab064736f6c63430008130033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
