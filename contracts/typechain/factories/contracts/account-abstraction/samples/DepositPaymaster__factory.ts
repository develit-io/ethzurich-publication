/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DepositPaymaster,
  DepositPaymasterInterface,
} from "../../../../contracts/account-abstraction/samples/DepositPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addDepositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "tokenPriceOracle",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100ea57601f611d5d38819003918201601f19168301916001600160401b038311848410176100ef578084926020946040528339810103126100ea57516001600160a01b039081811681036100ea5760008054336001600160a01b0319821681178355604051949293929091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08480a36080523381526003602052604043912055611c57908161010682396080518181816107f301528181610ac701528181610c1001528181610ccd01528181610d7e015281816114a00152818161157001526118240152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c80630396cb601461151557838163205c28781461144757508063382edd9e14611359578063493b0170146112cf5780634a6f84cf1461126d5780635476bd7214611163578063715018a6146110c6578063796d43711461108b5780638da5cb5b1461103a5780639ed0fb6814610ffa578063a9a2340914610e07578063addd509914610da2578063b0d691fe14610d3357838163bb9fe6bf14610c7d578163c23a5cea14610bb657508063c23f001f14610b3f578063c399ec8814610a4e578063cc9c837c146108c9578063cd8f80c21461088257838163d0e30db0146107b057508063f2fde38b146106765763f465c77e1461011857600080fd5b3461066f577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc926060843601126106735782359167ffffffffffffffff9384841161066f57838101936101608136039788011261066b5760449687359161017d61180d565b6188b860a482013511156105e9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdd61012482013592018212156105e5570196828801358781116105e5576024988136038a8201136105605760288203610564578160141161056057603801357fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008082169160147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec850110610549575b5050905060601c73ffffffffffffffffffffffffffffffffffffffff96878135169082885260209860018a52878920541680156104c85790898c959493928951968780927fd1eca9cf0000000000000000000000000000000000000000000000000000000082528a8c8301525afa9485156104be578995610488575b506102c090611bf8565b9281895260038a52878920546104095782895260028a52878920826000528a52848860002054106103895750865198890152858801526060870152608086015260a085015260a0845260c08401948486109086111761035c5750837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff40949550815284526103516101008301836116ac565b9060e0830152030190f35b604186917f4e487b7100000000000000000000000000000000000000000000000000000000600052526000fd5b867f4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f60849260218f8e8d51957f08c379a00000000000000000000000000000000000000000000000000000000087528601528401528201527f77000000000000000000000000000000000000000000000000000000000000006064820152fd5b867f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f6084928e8d8c51947f08c379a0000000000000000000000000000000000000000000000000000000008652850152808401528201527f636b6564000000000000000000000000000000000000000000000000000000006064820152fd5b9094508981813d83116104b7575b6104a081836117cc565b810103126104b25751936102c06102b6565b600080fd5b503d610496565b88513d8b823e3d90fd5b506084867f4465706f7369745061796d61737465723a20756e737570706f7274656420746f8660238f8e8d51957f08c379a00000000000000000000000000000000000000000000000000000000087528601528401528201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152fd5b91506014819381030160031b1b161680388061023a565b8680fd5b6084857f4465706f7369745061796d61737465723a207061796d6173746572416e6444618560358e60208c51957f08c379a00000000000000000000000000000000000000000000000000000000087528601528401528201527f7461206d757374207370656369667920746f6b656e00000000000000000000006064820152fd5b8580fd5b6084847f4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f8b60208951937f08c379a0000000000000000000000000000000000000000000000000000000008552840152602860248401528201527f7220706f73744f700000000000000000000000000000000000000000000000006064820152fd5b8380fd5b8280fd5b80fd5b50903461066f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261066f576106af6115e5565b906106b861170a565b73ffffffffffffffffffffffffffffffffffffffff80921692831561072d575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b808484827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087e5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691823b1561087957839060248351809581937fb760faf9000000000000000000000000000000000000000000000000000000008352309083015234905af190811561087057506108605750f35b61086990611789565b6106735780f35b513d84823e3d90fd5b505050fd5b5050fd5b833461067357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610673576108c633600052600360205260006040812055565b80f35b50829034610a4a576108da3661164c565b9290923385526003602052818520548015159081610a40575b50156109bd5773ffffffffffffffffffffffffffffffffffffffff808416865260026020528286203360005260205282600020610931838254611beb565b90558251947fa9059cbb000000000000000000000000000000000000000000000000000000006020870152166024850152604484015260448352608083019083821067ffffffffffffffff83111761098f576108c694955052611964565b6041867f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b60848660208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b60448201527f656e4465706f73697400000000000000000000000000000000000000000000006064820152fd5b90504311876108f3565b5080fd5b50829034610a4a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a4a578051927f70a08231000000000000000000000000000000000000000000000000000000008452309084015260208360248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa918215610b345791610b00575b6020925051908152f35b90506020823d8211610b2c575b81610b1a602093836117cc565b810103126104b2576020915190610af6565b3d9150610b0d565b9051903d90823e3d90fd5b838234610a4a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a4a57602091610b7a6115e5565b82610b83611629565b9273ffffffffffffffffffffffffffffffffffffffff809316815260028652209116600052825280600020549051908152f35b8084843461087e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087e57610bf06115e5565b610bf861170a565b73ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803b156105e557859283602492865197889586947fc23a5cea00000000000000000000000000000000000000000000000000000000865216908401525af190811561087057506108605750f35b8084843461087e57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087e57610cb661170a565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691823b1561087957839283918351809581937fbb9fe6bf0000000000000000000000000000000000000000000000000000000083525af190811561087057506108605750f35b838234610a4a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a4a576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b838234610a4a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a4a576020918173ffffffffffffffffffffffffffffffffffffffff9182610df66115e5565b168152600185522054169051908152f35b50829034610a4a5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a4a57823592600384101561066f57602480359067ffffffffffffffff8083116105e557366023840112156105e557828401359081116105e557820136828201116105e5578260a091610e8761180d565b0312610ff657610e98818301611608565b92610ea560448401611608565b9260648101359260a460848301359201359273ffffffffffffffffffffffffffffffffffffffff809716946188b89080820291820403610fcb57610eeb906044356118aa565b838102938185041490151715610f9f578315610f755750500493610f4593909290918291908660028a14610f4a57610f25913090846118e6565b1685526002602052818520908554166000526020526000209182546118aa565b905580f35b50828216885260026020528488209060005260205283600020610f6e878254611beb565b9055610f25565b601289917f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6011907f4e487b7100000000000000000000000000000000000000000000000000000000600052526000fd5b50601189917f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8480fd5b838234610a4a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a4a573382526003602052439082205580f35b838234610a4a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a4a5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b838234610a4a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a4a57602090516188b88152f35b833461067357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610673576110fd61170a565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461066f57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261066f5761119a6115e5565b6024359273ffffffffffffffffffffffffffffffffffffffff918285168095036105e55782906111c861170a565b1691828652600160205283862054166112105750835260016020528220907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580f35b60649060208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f546f6b656e20616c7265616479207365740000000000000000000000000000006044820152fd5b838234610a4a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a4a578060209273ffffffffffffffffffffffffffffffffffffffff6112bf6115e5565b1681526003845220549051908152f35b50823461067357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067357816113086115e5565b91611311611629565b9273ffffffffffffffffffffffffffffffffffffffff809116825260026020528282209316928360005260205281600020549281526003602052205482519182526020820152f35b503461066f576113683661164c565b92919093611378843033856118e6565b73ffffffffffffffffffffffffffffffffffffffff809216908187526001602052828488205416156113ea5750906113ca929186526002602052818620941693846000526020526000209182546118aa565b905533146113d55780f35b6108c633600052600360205260006040812055565b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f756e737570706f7274656420746f6b656e0000000000000000000000000000006044820152fd5b8084843461087e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087e576114806115e5565b61148861170a565b73ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803b156105e557859283604492865197889586947f205c2878000000000000000000000000000000000000000000000000000000008652169084015260243560248401525af190811561087057506108605750f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261066f5782823563ffffffff8116809103610a4a5761155961170a565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001693843b1561066f57602490845195869384927f0396cb6000000000000000000000000000000000000000000000000000000000845283015234905af190811561087057506115dc575080f35b6108c690611789565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036104b257565b359073ffffffffffffffffffffffffffffffffffffffff821682036104b257565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036104b257565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126104b25773ffffffffffffffffffffffffffffffffffffffff9060043582811681036104b2579160243590811681036104b2579060443590565b919082519283825260005b8481106116f65750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016116b7565b73ffffffffffffffffffffffffffffffffffffffff60005416330361172b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161179d57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761179d57604052565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361184c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152fd5b919082018092116118b757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9290604051927f23b872dd00000000000000000000000000000000000000000000000000000000602085015273ffffffffffffffffffffffffffffffffffffffff809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff84111761179d5761196292604052611964565b565b73ffffffffffffffffffffffffffffffffffffffff16906040516040810167ffffffffffffffff908281108282111761179d576040526020938483527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858401526000808587829751910182855af1903d15611b10573d928311611ae35790611a2b93929160405192611a1e887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601856117cc565b83523d868885013e611b1b565b805180611a39575b50505050565b81849181010312610a4a57820151908115918215036106735750611a5f57808080611a33565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b90611a2b9392506060915b91929015611b965750815115611b2f575090565b3b15611b385790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015611ba95750805190602001fd5b611be7906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906116ac565b0390fd5b919082039182116118b757565b61010060e0820135910135808214611c1d57480180821015611c18575090565b905090565b509056fea2646970667358221220162ce0d0989675d0b33afdfae1eb10c10914b0b4d157119275a6e6a73df8574964736f6c63430008130033";

type DepositPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositPaymaster__factory extends ContractFactory {
  constructor(...args: DepositPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<DepositPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): DepositPaymaster {
    return super.attach(address) as DepositPaymaster;
  }
  override connect(signer: Signer): DepositPaymaster__factory {
    return super.connect(signer) as DepositPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositPaymasterInterface {
    return new utils.Interface(_abi) as DepositPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositPaymaster {
    return new Contract(address, _abi, signerOrProvider) as DepositPaymaster;
  }
}
