/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BLSAccount,
  BLSAccountInterface,
} from "../../../../../contracts/account-abstraction/samples/bls/BLSAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anAggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[4]",
        name: "oldPublicKey",
        type: "uint256[4]",
      },
      {
        indexed: false,
        internalType: "uint256[4]",
        name: "newPublicKey",
        type: "uint256[4]",
      },
    ],
    name: "PublicKeyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlsPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "aPublicKey",
        type: "uint256[4]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "newPublicKey",
        type: "uint256[4]",
      },
    ],
    name: "setBlsPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0346200018c57601f620020e538819003918201601f19168301916001600160401b03831184841017620001915780849260409485528339810103126200018c5780516001600160a01b039182821682036200018c576020015191821682036200018c573060805260a05260005460ff8160081c16620001375760ff80821610620000fb575b5060c052604051611f3d9081620001a8823960805181818161052001528181610b820152610d5e015260a0518181816107420152818161093801528181610a1701528181610f07015281816110280152818161130801528181611b6a0152611bc8015260c05181818161048a01526107a60152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000086565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806318dfb3c71461012b57806318fc5c4414610126578063245a7bfc146101215780633659cfe61461011c5780633a871cdd146101175780634a58db19146101125780634d44560d1461010d5780634f1ef2861461010857806352d1902d146101035780638da5cb5b146100fe578063affed0e0146100f9578063b0d691fe146100f4578063b61d27f6146100ef578063c399ec88146100ea578063c4d66de8146100e5578063e02afbae146100e05763ee472f360361000e57611270565b611228565b61109d565b610faf565b610f2b565b610ebc565b610e72565b610e33565b610d18565b610b01565b6109b9565b6108f6565b6106d7565b6104cc565b61043f565b610421565b610166565b9181601f840112156101615782359167ffffffffffffffff8311610161576020808501948460051b01011161016157565b600080fd5b346101615760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101615767ffffffffffffffff600435818111610161576101b6903690600401610130565b9091602435908111610161576101d0903690600401610130565b6101d8611bb1565b8083036102505760005b8381106101eb57005b61021c6102016101fc838789611a4e565b611a63565b61021661020f848688611a6d565b3691610aca565b90611d17565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461024b576001016101e2565b6119f0565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116102f157604052565b6102ae565b6060810190811067ffffffffffffffff8211176102f157604052565b6080810190811067ffffffffffffffff8211176102f157604052565b6020810190811067ffffffffffffffff8211176102f157604052565b60a0810190811067ffffffffffffffff8211176102f157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102f157604052565b604051906103b4826102f6565b565b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261016157806023121561016157604051906103f682610312565b816084918211610161576004905b8282106104115750505090565b8135815260209182019101610404565b3461016157610019610432366103b6565b61043a611d2e565b611e7f565b346101615760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016157602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b73ffffffffffffffffffffffffffffffffffffffff81160361016157565b346101615760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016157600435610507816104ae565b73ffffffffffffffffffffffffffffffffffffffff90817f0000000000000000000000000000000000000000000000000000000000000000169161054d833014156113eb565b61057c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc938285541614611476565b610584611d2e565b604051906105918261032e565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156105cb57505061001991506115a7565b6020600491604094939451928380927f52d1902d00000000000000000000000000000000000000000000000000000000825286165afa600091816106a7575b50610694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b610019936106a2911461151c565b611693565b6106c991925060203d81116106d0575b6106c18183610366565b810190611501565b903861060a565b503d6106b7565b34610161577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc606081360112610161576004359067ffffffffffffffff821161016157610160826004019183360301126101615773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361089857604461081b92019061077a8282611931565b905061082e575b6107f76107f061078f6103a7565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260006020820181905260408201525173ffffffffffffffffffffffffffffffffffffffff1690565b9282611931565b90501561081f575b5061080b604435611982565b6040519081529081906020820190565b0390f35b61082890611c64565b386107ff565b610893610839611ee1565b60405161084a602082018093611200565b608081526108578161034a565b51902061088661020f61086a8686611931565b90816108806108798a8a611931565b9050611dab565b91611dd8565b6020815191012014611df0565b610781565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109b65773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681813b156109b657602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af180156109b1576109a5575080f35b6109ae906102dd565b80f35b611510565b80fd5b3461016157600060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109b6576004356109f6816104ae565b6109fe611d2e565b8173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001692833b15610a8c576044908360405195869485937f205c287800000000000000000000000000000000000000000000000000000000855216600484015260243560248401525af180156109b1576109a5575080f35b8280fd5b67ffffffffffffffff81116102f157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192610ad682610a90565b91610ae46040519384610366565b829481845281830111610161578281602093846000960137010152565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016157600435610b37816104ae565b60243567ffffffffffffffff8111610161573660238201121561016157610b68903690602481600401359101610aca565b9073ffffffffffffffffffffffffffffffffffffffff91827f00000000000000000000000000000000000000000000000000000000000000001692610baf843014156113eb565b610bde7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc948286541614611476565b610be6611d2e565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c1c57505061001991506115a7565b6020600491604094939451928380927f52d1902d00000000000000000000000000000000000000000000000000000000825286165afa60009181610cf8575b50610ce5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b61001993610cf3911461151c565b611772565b610d1191925060203d81116106d0576106c18183610366565b9038610c5b565b346101615760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101615773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610daf576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b346101615760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016157602060015460601c604051908152f35b346101615760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101615760206bffffffffffffffffffffffff60015416604051908152f35b346101615760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016157602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101615760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016157600435610f66816104ae565b6044359067ffffffffffffffff908183116101615736602384011215610161578260040135918211610161573660248385010111610161576024610019930190602435906119bc565b34610161576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109b6576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa9081156109b1578291611063575b604051828152602090f35b90506020813d8211611095575b8161107d60209383610366565b810103126110915761081b91505138611058565b5080fd5b3d9150611070565b346101615760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610161576004356110d8816104ae565b61113a6000549161110060ff8460081c1615809481956111f2575b81156111d2575b50611a88565b8261113160017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b61119c57611b13565b61114057005b61116d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b6111cd6101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b611b13565b303b159150816111e4575b50386110fa565b6001915060ff1614386111dd565b600160ff82161091506110f3565b6000915b6004831061121157505050565b600190825181526020809101920192019190611204565b346101615760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610161576080611261611ee1565b61126e6040518092611200565bf35b346101615761127e366103b6565b6000906113518254916112a660ff8460081c1615809481956111f25781156111d25750611a88565b826112d760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b6113b5575b6bffffffffffffffffffffffff600154166001558373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de8280a3611e7f565b6113585780f35b6113857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a180f35b6113e66101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b6112dc565b156113f257565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152fd5b1561147d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152fd5b90816020910312610161575190565b6040513d6000823e3d90fd5b1561152357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152fd5b803b1561160f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b9061169d826115a7565b73ffffffffffffffffffffffffffffffffffffffff82167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511580159061176a575b6116ec575050565b6117679160008060405193611700856102f6565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af46117616117d2565b91611867565b50565b5060006116e4565b9061177c826115a7565b73ffffffffffffffffffffffffffffffffffffffff82167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28051158015906117ca576116ec575050565b5060016116e4565b3d156117fd573d906117e382610a90565b916117f16040519384610366565b82523d6000602084013e565b606090565b1561180957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b9192901561188a575081511561187b575090565b611887903b1515611802565b90565b82519091501561189d5750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b84811061191a575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b8181018301518682016044015285935082016118d9565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610161570180359067ffffffffffffffff82116101615760200191813603831361016157565b8061198a5750565b600080808093337ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1506117676117d2565b6119cd60009493859461020f611bb1565b91602083519301915af16119df6117d2565b90156119e85750565b602081519101fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9190811015611a5e5760051b0190565b611a1f565b35611887816104ae565b90821015611a5e57611a849160051b810190611931565b9091565b15611a8f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b6bffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006001549260601b169116178060015560601c73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de600080a3565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633148015611c56575b15611bf857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b5060015460601c3314611bf1565b600154906bffffffffffffffffffffffff908183169282841461024b577fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006020936001860116911617600155013503611cb957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6163636f756e743a20696e76616c6964206e6f6e6365000000000000000000006044820152fd5b600091829182602083519301915af16119df6117d2565b60015460601c33148015611da2575b15611d4457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b50303314611d3d565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80820191821161024b57565b90939293848311610161578411610161578101920390565b15611df757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f77726f6e67207075626b657900000000000000000000000000000000000000006044820152fd5b6002906000905b60048210611e6957505050565b6001602081928554815201930191019091611e5c565b7f42e4c4ce1432650f17e41c4ea77ed12c0ab20b229d3ffd84a2ebc9f8abb25a83610100604051611eaf81611e55565b611ebc6080820185611200565ba160005b60048110611ecc575050565b60019060208351930192816002015501611ec0565b6080604051611eef81610312565b369037604051611efe81611e55565b6118878161031256fea26469706673582212207b2b9a5cbc007e44a05328420cc596e7ba29d7d524e1c4dd53eb6d6ea674a2a764736f6c63430008130033";

type BLSAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BLSAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BLSAccount__factory extends ContractFactory {
  constructor(...args: BLSAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BLSAccount> {
    return super.deploy(
      anEntryPoint,
      anAggregator,
      overrides || {}
    ) as Promise<BLSAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      anAggregator,
      overrides || {}
    );
  }
  override attach(address: string): BLSAccount {
    return super.attach(address) as BLSAccount;
  }
  override connect(signer: Signer): BLSAccount__factory {
    return super.connect(signer) as BLSAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BLSAccountInterface {
    return new utils.Interface(_abi) as BLSAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BLSAccount {
    return new Contract(address, _abi, signerOrProvider) as BLSAccount;
  }
}
