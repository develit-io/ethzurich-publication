/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  GnosisSafeProxyFactory,
  GnosisSafeProxyFactoryInterface,
} from "../../../../../@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ProxyCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "calculateCreateProxyWithNonceAddress",
    outputs: [
      {
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createProxy",
    outputs: [
      {
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
      {
        internalType: "contract IProxyCreationCallback",
        name: "callback",
        type: "address",
      },
    ],
    name: "createProxyWithCallback",
    outputs: [
      {
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createProxyWithNonce",
    outputs: [
      {
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyRuntimeCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610bde908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c9081631688f0b91461007a575080632500510e1461007557806353e5d9351461007057806361b69abd1461006b578063addacc0f146100665763d18af54d1461006157600080fd5b61053a565b6104d6565b610399565b610334565b610243565b346101115760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011157600435906100b682610114565b6024359067ffffffffffffffff82116101115761010d6100e6846100dd3660048701610225565b604435916106ea565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b80fd5b73ffffffffffffffffffffffffffffffffffffffff81160361013257565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161017a57604052565b610137565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761017a57604052565b92919267ffffffffffffffff821161017a576040519161020860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116018461017f565b829481845281830111610132578281602093846000960137010152565b9080601f8301121561013257816020610240933591016101c0565b90565b346101325760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101325760043561027e81610114565b6024359067ffffffffffffffff9081831161013257366023840112156101325782600401359182116101325736602483850101116101325760246044359301906108c2565b600091031261013257565b60005b8381106102e15750506000910152565b81810151838201526020016102d1565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361032d815180928187528780880191016102ce565b0116010190565b346101325760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101325761010d6101846040519061037a602082018361017f565b80825261098660208301396040519182916020835260208301906102f1565b346101325760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610132576004356103d481610114565b67ffffffffffffffff602435818111610132576103f5903690600401610225565b90604051610184808201928284109084111761017a57610986823973ffffffffffffffffffffffffffffffffffffffff8416825260208160009303019082f09182156104d157805190816104ba575b6040805173ffffffffffffffffffffffffffffffffffffffff86811682528716602082015261010d9186917f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359190a160405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b8291602083920182865af115610111578080610444565b6106de565b346101325760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101325761010d609f6040519061051b602082018361017f565b808252610b0a60208301396040519182916020835260208301906102f1565b346101325760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101325760043561057581610114565b60243567ffffffffffffffff811161013257610595903690600401610225565b90606435906044356105a683610114565b73ffffffffffffffffffffffffffffffffffffffff61063b604051602081019061063181610605898886906034927fffffffffffffffffffffffffffffffffffffffff00000000000000000000000091835260601b1660208201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528261017f565b51902086856106ea565b931680610664575b60405173ffffffffffffffffffffffffffffffffffffffff85168152602090f35b803b15610132576106aa9460008094604051978895869485937f1e52b5180000000000000000000000000000000000000000000000000000000085528a60048601610882565b03925af19182156104d15761010d926106c5575b8080610643565b806106d26106d892610166565b806102c3565b386106be565b6040513d6000823e3d90fd5b9092916106f89084836107cd565b9280519081610750575b50506040805173ffffffffffffffffffffffffffffffffffffffff85811682529290921660208301527f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e23591a1565b600091602083920182875af115610132573880610702565b1561076f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f437265617465322063616c6c206661696c6564000000000000000000000000006044820152fd5b929181516020809301209160409283519282840191825284840152838352606083019083821067ffffffffffffffff83111761017a57848261086f9261084494610880985286519020956080610184916108298884018561017f565b828452019061098682398251948592518092888501906102ce565b810173ffffffffffffffffffffffffffffffffffffffff809a1686820152038481018452018261017f565b805191016000f59283161515610768565b565b9493926108bd9160609373ffffffffffffffffffffffffffffffffffffffff80921688521660208701526080604087015260808601906102f1565b930152565b906108d3906108d9949336916101c0565b906107cd565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006040519160601b16602082015260148152604081019080821067ffffffffffffffff83111761017a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc090826040527f08c379a00000000000000000000000000000000000000000000000000000000083526020604482015261098060648201826102f1565b030190fdfe6080346100c957601f61018438819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051609f90816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600073ffffffffffffffffffffffffffffffffffffffff815416907fa619486e00000000000000000000000000000000000000000000000000000000813514606257808092368280378136915af43d82803e15605e573d90f35b3d90fd5b6020918152f3fea2646970667358221220a3f2e4f65750a2661a705d5fb4a1c389c439b61bf0d23371e888764c22cb5be864736f6c634300081300336080604052600073ffffffffffffffffffffffffffffffffffffffff815416907fa619486e00000000000000000000000000000000000000000000000000000000813514606257808092368280378136915af43d82803e15605e573d90f35b3d90fd5b6020918152f3fea2646970667358221220a3f2e4f65750a2661a705d5fb4a1c389c439b61bf0d23371e888764c22cb5be864736f6c63430008130033a26469706673582212202a568982f9858507a16885b9f07f4eddaa28ce7af208a83e6e36af412627b1b764736f6c63430008130033";

type GnosisSafeProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GnosisSafeProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GnosisSafeProxyFactory__factory extends ContractFactory {
  constructor(...args: GnosisSafeProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GnosisSafeProxyFactory> {
    return super.deploy(overrides || {}) as Promise<GnosisSafeProxyFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GnosisSafeProxyFactory {
    return super.attach(address) as GnosisSafeProxyFactory;
  }
  override connect(signer: Signer): GnosisSafeProxyFactory__factory {
    return super.connect(signer) as GnosisSafeProxyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GnosisSafeProxyFactoryInterface {
    return new utils.Interface(_abi) as GnosisSafeProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GnosisSafeProxyFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GnosisSafeProxyFactory;
  }
}
